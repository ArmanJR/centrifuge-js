{"version":3,"sources":["webpack://Centrifuge/webpack/universalModuleDefinition","webpack://Centrifuge/./src/centrifuge.js","webpack://Centrifuge/./src/index.js","webpack://Centrifuge/./src/json.js","webpack://Centrifuge/./src/subscription.js","webpack://Centrifuge/./src/utils.js","webpack://Centrifuge/./node_modules/events/events.js","webpack://Centrifuge/webpack/bootstrap","webpack://Centrifuge/webpack/runtime/global","webpack://Centrifuge/webpack/startup"],"names":["_errorTimeout","_errorConnectionClosed","Centrifuge","url","options","_url","_websocket","_sockjs","_isSockjs","_xmlhttprequest","_binary","_methodType","_pushType","_encoder","_decoder","_status","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_refreshRequired","_subs","_serverSubs","_lastSeq","_lastGen","_lastOffset","_lastEpoch","_messages","_isBatching","_isSubscribeBatching","_privateChannels","_numRefreshFailed","_refreshTimeout","_pingTimeout","_pongTimeout","_subRefreshTimeouts","_retries","_callbacks","_latency","_latencyStart","_connectData","_token","_xhrID","_xhrs","_dispatchPromise","Promise","resolve","_protocol","_config","protocol","debug","name","version","websocket","sockjs","xmlhttprequest","minRetry","maxRetry","timeout","ping","pingInterval","pongWaitTimeout","privateChannelPrefix","onTransportClose","sockjsServer","sockjsTransports","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshAttempts","refreshInterval","onRefreshFailed","onRefresh","subscribeEndpoint","subscribeHeaders","subscribeParams","subRefreshInterval","onPrivateSubscribe","disableWithCredentials","_configure","token","data","headers","params","callback","query","_debug","JSON","stringify","xhr","global","XMLHttpRequest","ActiveXObject","i","hasOwnProperty","length","encodeURIComponent","open","withCredentials","setRequestHeader","headerName","onreadystatechange","readyState","status","parsed","parse","responseText","e","error","_log","setTimeout","send","arguments","WebSocket","format","_formatOverride","Error","JsonMethodType","JsonPushType","JsonEncoder","JsonDecoder","configuration","isProtobufURL","indexOf","_setFormat","SockJS","newStatus","interval","xhrID","abort","reconnect","_stopPing","id","callbacks","clearTimeout","errback","_createErrorObject","channel","sub","_isSuccess","_triggerUnsubscribe","_recover","_shouldResubscribe","_setSubscribing","_setUnsubscribed","_abortInflightXHRs","_clearSubRefreshTimeout","transport","OPEN","commands","_isTransportOpen","command","encodeCommands","sockjsOptions","transports","server","_websocketSupported","subProtocol","_getSubProtocol","binaryType","onopen","onheartbeat","_restartPing","msg","subs","hasSubs","recoverable","seq","gen","offset","epoch","Date","_call","then","resolveCtx","_connectResponse","decodeCommandResult","CONNECT","result","next","rejectCtx","err","code","_disconnect","onerror","onclose","closeEvent","reason","needReconnect","advice","event","_getRetryInterval","_refresh","_connect","onmessage","_dataReceived","_rpc","method","RPC","_methodCall","SEND","isConnected","reject","sent","_transportSend","undefined","since","limit","reverse","resultCB","PUBLISH","_getHistoryParams","HISTORY","publications","PRESENCE","presence","PRESENCE_STATS","num_users","num_clients","replies","decodeReplies","finishDispatch","_dispatchSynchronized","p","_dispatchReply","reply","_handleReply","_handlePush","_addMessage","_registerCall","_setStatus","_setupTransport","shouldReconnect","_isDisconnected","_clearConnectedState","emit","close","_refreshFailed","clientID","_newXHRID","cb","resp","jitter","Math","round","random","max","REFRESH","_refreshResponse","_refreshError","context","_ajax","expires","client","_getTTLMilliseconds","ttl","channelsData","channels","channelData","SUB_REFRESH","_getSub","_subRefreshResponse","_subRefreshError","subRefreshTimeout","_subRefresh","isResubscribe","_setNew","SUBSCRIBE","startSubscribeBatching","_subscribe","stopSubscribeBatching","recover","_needRecover","_getLastSeq","_getLastGen","_getLastOffset","_getLastEpoch","_subscribeResponse","_subscribeError","UNSUBSCRIBE","min","isRecover","wasReconnecting","_resetRetry","getTime","startBatching","stopBatching","_startPing","ctx","latency","_processServerSubs","subCtx","_expandSubscribeContext","recovered","pubs","_handlePublication","_isSubscribing","message","_setSubscribeError","positioned","streamPosition","_setSubscribeSuccess","_recoverable","join","info","_isServerSub","leave","unsub","unsubscribe","resubscribe","subscribe","pub","push","decodePush","type","PUBLICATION","decodePushData","MESSAGE","_handleMessage","JOIN","_handleJoin","LEAVE","_handleLeave","UNSUB","_handleUnsub","SUB","_handleSub","messages","slice","PING","_pingResponse","lastSeq","lastOffset","lastGen","lastEpoch","errObject","_nextMessageId","_isConnected","_ping","_flush","authChannels","batch","_setNeedRecover","events","opts","currentSub","_setEvents","_isUnsubscribed","Subscription","_setSubscribeSince","EventEmitter","map","c","split","filter","r","methodType","pushType","_STATE_NEW","_STATE_SUBSCRIBING","_STATE_SUCCESS","_STATE_ERROR","_STATE_UNSUBSCRIBED","centrifuge","_centrifuge","_error","_isResubscribe","_ready","_subscriptionPromise","_noResubscribe","_initializePromise","_promises","_promiseId","on","errContext","_resolve","value","_reject","enabled","Object","prototype","toString","call","knownEvents","l","ev","subscribeResult","successContext","_getSubscribeSuccessContext","_getSubscribeErrorContext","noResubscribe","needTrigger","subscribeErrorContext","_unsubscribe","_isError","subPromise","res","rej","_nextPromiseId","self","publish","presenceStats","history","startsWith","prefix","lastIndexOf","isFunction","log","level","args","console","logger","apply","backoff","step","pow","floor","errorExists","extend","a","b","key"],"mappings":"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C,GAAG,GAAGrC,IAAI,CAAC4K,GAAL,CAAS,CAAT,EAAYD,IAAI,GAAG,CAAnB,CAApB,CAAjB;AAEA,SAAO3K,IAAI,CAAC6K,KAAL,CAAW,CAAC,IAAI9K,MAAL,IAAenH,QAA1B,CAAP;AACD;;AAAA;;AAEM,SAASkS,WAAT,CAAqBhV,IAArB,EAA2B;AAChC,SAAO,WAAWA,IAAX,IAAmBA,IAAI,CAAC2B,KAAL,KAAe,IAAzC;AACD;;AAAA;;AAEM,SAASsT,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC3B,OAAK,IAAMC,GAAX,IAAkBD,CAAlB,EAAqB;AACnB,QAAIA,CAAC,CAACtU,cAAF,CAAiBuU,GAAjB,CAAJ,EAA2B;AACzBF,OAAC,CAACE,GAAD,CAAD,GAASD,CAAC,CAACC,GAAD,CAAV;AACD;AACF;;AACD,SAAOF,CAAP;AACD;;AAAA,C;;;;;;;ACvCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;UC3dA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;WACA,CAAC,I;;;;UCPD;UACA;UACA;UACA","file":"centrifuge.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(this, function() {\nreturn ","import EventEmitter from 'events';\nimport Subscription from './subscription';\n\nimport {\n  JsonEncoder,\n  JsonDecoder,\n  JsonMethodType,\n  JsonPushType\n} from './json';\n\nimport {\n  isFunction,\n  log,\n  startsWith,\n  errorExists,\n  backoff,\n  extend\n} from './utils';\n\nconst _errorTimeout = 'timeout';\nconst _errorConnectionClosed = 'connection closed';\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(url, options) {\n    super();\n    this._url = url;\n    this._websocket = null;\n    this._sockjs = null;\n    this._isSockjs = false;\n    this._xmlhttprequest = null;\n    this._binary = false;\n    this._methodType = null;\n    this._pushType = null;\n    this._encoder = null;\n    this._decoder = null;\n    this._status = 'disconnected';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._refreshRequired = false;\n    this._subs = {};\n    this._serverSubs = {};\n    this._lastSeq = {};\n    this._lastGen = {};\n    this._lastOffset = {};\n    this._lastEpoch = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isSubscribeBatching = false;\n    this._privateChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingTimeout = null;\n    this._pongTimeout = null;\n    this._subRefreshTimeouts = {};\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._connectData = null;\n    this._token = null;\n    this._xhrID = 0;\n    this._xhrs = {};\n    this._dispatchPromise = Promise.resolve();\n    this._protocol = '';\n    this._config = {\n      protocol: '',\n      debug: false,\n      name: 'js',\n      version: '',\n      websocket: null,\n      sockjs: null,\n      xmlhttprequest: null,\n      minRetry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null,\n      disableWithCredentials: false\n    };\n    this._configure(options);\n  }\n\n  setToken(token) {\n    this._token = token;\n  }\n\n  setConnectData(data) {\n    this._connectData = data;\n  }\n\n  setRefreshHeaders(headers) {\n    this._config.refreshHeaders = headers;\n  }\n  setRefreshParams(params) {\n    this._config.refreshParams = params;\n  }\n  setRefreshData(data) {\n    this._config.refreshData = data;\n  }\n\n  setSubscribeHeaders(headers) {\n    this._config.subscribeHeaders = headers;\n  }\n  setSubscribeParams(params) {\n    this._config.subscribeParams = params;\n  }\n\n  _ajax(url, params, headers, data, callback) {\n    let query = '';\n    this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n    let xhr;\n    if (this._xmlhttprequest !== null) {\n      // use explicitly passed XMLHttpRequest object.\n      xhr = new this._xmlhttprequest();\n    } else {\n      xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP'));\n    }\n\n    for (const i in params) {\n      if (params.hasOwnProperty(i)) {\n        if (query.length > 0) {\n          query += '&';\n        }\n        query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n      }\n    }\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = !this._config.disableWithCredentials;\n    }\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (const headerName in headers) {\n      if (headers.hasOwnProperty(headerName)) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let data, parsed = false;\n          try {\n            data = JSON.parse(xhr.responseText);\n            parsed = true;\n          } catch (e) {\n            callback({\n              error: 'Invalid JSON. Data was: ' + xhr.responseText,\n              status: 200,\n              data: null\n            });\n          }\n          if (parsed) { // prevents double execution.\n            callback({\n              data: data,\n              status: 200\n            });\n          }\n        } else {\n          this._log('wrong status code in AJAX response', xhr.status);\n          callback({\n            status: xhr.status,\n            data: null\n          });\n        }\n      }\n    };\n    setTimeout(() => xhr.send(JSON.stringify(data)), 20);\n    return xhr;\n  };\n\n  _log() {\n    log('info', arguments);\n  };\n\n  _debug() {\n    if (this._config.debug === true) {\n      log('debug', arguments);\n    }\n  };\n\n  _websocketSupported() {\n    if (this._config.websocket !== null) {\n      return true;\n    }\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object');\n  };\n\n  _setFormat(format) {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n    }\n    this._binary = false;\n    this._methodType = JsonMethodType;\n    this._pushType = JsonPushType;\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  _formatOverride(format) {\n    return false;\n  }\n\n  _configure(configuration) {\n    if (!('Promise' in global)) {\n      throw new Error('Promise polyfill required');\n    }\n\n    extend(this._config, configuration || {});\n    this._debug('centrifuge config', this._config);\n\n    if (!this._url) {\n      throw new Error('url required');\n    }\n\n    const isProtobufURL = startsWith(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1;\n    if (isProtobufURL || this._config.protocol === 'protobuf') {\n      this._setFormat('protobuf');\n      this._protocol = 'protobuf';\n    } else {\n      if (this._config.protocol !== '' && this._config.protocol !== 'json') {\n        throw new Error('unsupported protocol ' + this._config.protocol);\n      }\n      this._setFormat('json');\n    }\n\n    if (startsWith(this._url, 'http')) {\n      this._debug('client will try to connect to SockJS endpoint');\n      if (this._config.sockjs !== null) {\n        this._debug('SockJS explicitly provided in options');\n        this._sockjs = this._config.sockjs;\n      } else {\n        if (typeof global.SockJS === 'undefined') {\n          throw new Error('SockJS not found, use ws:// in url or include SockJS');\n        }\n        this._debug('use globally defined SockJS');\n        this._sockjs = global.SockJS;\n      }\n    } else {\n      this._debug('client will connect to websocket endpoint');\n    }\n\n    this._xmlhttprequest = this._config.xmlhttprequest;\n  };\n\n  _setStatus(newStatus) {\n    if (this._status !== newStatus) {\n      this._debug('Status', this._status, '->', newStatus);\n      this._status = newStatus;\n    }\n  };\n\n  _isDisconnected() {\n    return this._status === 'disconnected';\n  };\n\n  _isConnecting() {\n    return this._status === 'connecting';\n  };\n\n  _isConnected() {\n    return this._status === 'connected';\n  };\n\n  _nextMessageId() {\n    return ++this._messageId;\n  };\n\n  _resetRetry() {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n  };\n\n  _getRetryInterval() {\n    const interval = backoff(this._retries, this._config.minRetry, this._config.maxRetry);\n\n    this._retries += 1;\n    return interval;\n  };\n\n  _abortInflightXHRs() {\n    for (const xhrID in this._xhrs) {\n      try {\n        this._xhrs[xhrID].abort();\n      } catch (e) {\n        this._debug('error aborting xhr', e);\n      }\n      delete this._xhrs[xhrID];\n    }\n  };\n\n  _clearConnectedState(reconnect) {\n    this._clientID = null;\n    this._stopPing();\n\n    // fire errbacks of registered outgoing calls.\n    for (const id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        const callbacks = this._callbacks[id];\n        clearTimeout(callbacks.timeout);\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback({ error: this._createErrorObject('disconnected') });\n      }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n\n        if (reconnect) {\n          if (sub._isSuccess()) {\n            sub._triggerUnsubscribe();\n            sub._recover = true;\n          }\n          if (sub._shouldResubscribe()) {\n            sub._setSubscribing();\n          }\n        } else {\n          sub._setUnsubscribed();\n        }\n      }\n    }\n\n    this._abortInflightXHRs();\n\n    // clear refresh timer\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    // clear sub refresh timers\n    for (const channel in this._subRefreshTimeouts) {\n      if (this._subRefreshTimeouts.hasOwnProperty(channel) && this._subRefreshTimeouts[channel]) {\n        this._clearSubRefreshTimeout(channel);\n      }\n    }\n    this._subRefreshTimeouts = {};\n\n    if (!this._reconnect) {\n      // completely clear subscriptions\n      this._subs = {};\n    }\n  };\n\n  _isTransportOpen() {\n    if (this._isSockjs) {\n      return this._transport &&\n        this._transport.transport &&\n        this._transport.transport.readyState === this._transport.transport.OPEN;\n    }\n    return this._transport && this._transport.readyState === this._transport.OPEN;\n  };\n\n  _transportSend(commands) {\n    if (!commands.length) {\n      return true;\n    }\n\n    if (!this._isTransportOpen()) {\n      // resolve pending commands with error if transport is not open\n      for (let command in commands) {\n        let id = command.id;\n        if (!(id in this._callbacks)) {\n          continue;\n        }\n        const callbacks = this._callbacks[id];\n        clearTimeout(this._callbacks[id].timeout);\n        delete this._callbacks[id];\n        const errback = callbacks.errback;\n        errback({ error: this._createErrorObject(_errorConnectionClosed, 0) });\n      }\n      return false;\n    }\n    this._transport.send(this._encoder.encodeCommands(commands));\n    return true;\n  }\n\n  _getSubProtocol() {\n    if (!this._protocol) {\n      return '';\n    }\n    return 'centrifuge-' + this._protocol;\n  }\n\n  _setupTransport() {\n    this._isSockjs = false;\n\n    // detect transport to use - SockJS or Websocket\n    if (this._sockjs !== null) {\n      const sockjsOptions = {\n        transports: this._config.sockjsTransports\n      };\n\n      if (this._config.sockjsServer !== null) {\n        sockjsOptions.server = this._config.sockjsServer;\n      }\n      this._isSockjs = true;\n      this._transport = new this._sockjs(this._url, null, sockjsOptions);\n    } else {\n      if (!this._websocketSupported()) {\n        this._debug('No Websocket support and no SockJS configured, can not connect');\n        return;\n      }\n      if (this._config.websocket !== null) {\n        this._websocket = this._config.websocket;\n      } else {\n        this._websocket = WebSocket;\n      }\n      const subProtocol = this._getSubProtocol();\n      if (subProtocol !== '') {\n        this._transport = new this._websocket(this._url, subProtocol);\n      } else {\n        this._transport = new this._websocket(this._url);\n      }\n      if (this._binary === true) {\n        this._transport.binaryType = 'arraybuffer';\n      }\n    }\n\n    this._transport.onopen = () => {\n      this._transportClosed = false;\n\n      if (this._isSockjs) {\n        this._transportName = 'sockjs-' + this._transport.transport;\n        this._transport.onheartbeat = () => this._restartPing();\n      } else {\n        this._transportName = 'websocket';\n      }\n\n      // Can omit method here due to zero value.\n      const msg = {\n        // method: this._methodType.CONNECT\n      };\n\n      if (this._token || this._connectData || this._config.name || this._config.version) {\n        msg.params = {};\n      }\n      if (this._token) {\n        msg.params.token = this._token;\n      }\n      if (this._connectData) {\n        msg.params.data = this._connectData;\n      }\n      if (this._config.name) {\n        msg.params.name = this._config.name;\n      }\n      if (this._config.version) {\n        msg.params.version = this._config.version;\n      }\n\n      let subs = {};\n      let hasSubs = false;\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel) && this._serverSubs[channel].recoverable) {\n          hasSubs = true;\n          let sub = {\n            'recover': true\n          };\n          if (this._serverSubs[channel].seq || this._serverSubs[channel].gen) {\n            if (this._serverSubs[channel].seq) {\n              sub['seq'] = this._serverSubs[channel].seq;\n            }\n            if (this._serverSubs[channel].gen) {\n              sub['gen'] = this._serverSubs[channel].gen;\n            }\n          } else {\n            if (this._serverSubs[channel].offset) {\n              sub['offset'] = this._serverSubs[channel].offset;\n            }\n          }\n          if (this._serverSubs[channel].epoch) {\n            sub['epoch'] = this._serverSubs[channel].epoch;\n          }\n          subs[channel] = sub;\n        }\n      }\n      if (hasSubs) {\n        if (!msg.params) { msg.params = {}; }\n        msg.params.subs = subs;\n      }\n\n      this._latencyStart = new Date();\n      this._call(msg).then(resolveCtx => {\n        this._connectResponse(this._decoder.decodeCommandResult(this._methodType.CONNECT, resolveCtx.result), hasSubs);\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        const err = rejectCtx.error;\n        if (err.code === 109) { // token expired.\n          this._refreshRequired = true;\n        }\n        this._disconnect('connect error', true);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    this._transport.onerror = error => {\n      this._debug('transport level error', error);\n    };\n\n    this._transport.onclose = closeEvent => {\n      this._transportClosed = true;\n      let reason = _errorConnectionClosed;\n      let needReconnect = true;\n\n      if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n        try {\n          const advice = JSON.parse(closeEvent.reason);\n          this._debug('reason is an advice object', advice);\n          reason = advice.reason;\n          needReconnect = advice.reconnect;\n        } catch (e) {\n          reason = closeEvent.reason;\n          this._debug('reason is a plain string', reason);\n        }\n      }\n\n      // onTransportClose callback should be executed every time transport was closed.\n      // This can be helpful to catch failed connection events (because our disconnect\n      // event only called once and every future attempts to connect do not fire disconnect\n      // event again).\n      if (this._config.onTransportClose !== null) {\n        this._config.onTransportClose({\n          event: closeEvent,\n          reason: reason,\n          reconnect: needReconnect\n        });\n      }\n\n      this._disconnect(reason, needReconnect);\n\n      if (this._reconnect === true) {\n        this._reconnecting = true;\n        const interval = this._getRetryInterval();\n\n        this._debug('reconnect after ' + interval + ' milliseconds');\n        setTimeout(() => {\n          if (this._reconnect === true) {\n            if (this._refreshRequired) {\n              this._refresh();\n            } else {\n              this._connect();\n            }\n          }\n        }, interval);\n      }\n    };\n\n    this._transport.onmessage = event => {\n      this._dataReceived(event.data);\n    };\n  };\n\n  rpc(data) {\n    return this._rpc('', data);\n  }\n\n  namedRPC(method, data) {\n    return this._rpc(method, data);\n  }\n\n  _rpc(method, data) {\n    let params = {\n      data: data\n    };\n    if (method !== '') {\n      params.method = method;\n    };\n    const msg = {\n      method: this._methodType.RPC,\n      params: params\n    };\n    return this._methodCall(msg, function (result) {\n      return result;\n    });\n  }\n\n  send(data) {\n    const msg = {\n      method: this._methodType.SEND,\n      params: {\n        data: data\n      }\n    };\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    const sent = this._transportSend([msg]); // can send async message to server without id set\n    if (!sent) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    };\n    return Promise.resolve({});\n  }\n\n  _getHistoryParams(channel, options) {\n    let params = {\n      channel: channel\n    };\n    if (options !== undefined) {\n      if (options.since) {\n        params['since'] = {\n          'offset': options.since.offset\n        };\n        if (options.since.epoch) {\n          params['since']['epoch'] = options.since.epoch;\n        }\n      };\n      if (options.limit !== undefined) {\n        params['limit'] = options.limit;\n      }\n      if (options.reverse === true) {\n        params['reverse'] = true;\n      }\n    };\n    return params;\n  }\n\n  _methodCall(msg, resultCB) {\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n    return new Promise((resolve, reject) => {\n      this._call(msg).then(resolveCtx => {\n        resolve(resultCB(this._decoder.decodeCommandResult(msg.method, resolveCtx.result)));\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        reject(rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    });\n  }\n\n  publish(channel, data) {\n    const msg = {\n      method: this._methodType.PUBLISH,\n      params: {\n        channel: channel,\n        data: data\n      }\n    };\n    return this._methodCall(msg, function () {\n      return {};\n    });\n  }\n\n  history(channel, options) {\n    const params = this._getHistoryParams(channel, options);\n    const msg = {\n      method: this._methodType.HISTORY,\n      params: params\n    };\n    return this._methodCall(msg, function (result) {\n      return {\n        'publications': result.publications,\n        'epoch': result.epoch || '',\n        'offset': result.offset || 0\n      };\n    });\n  }\n\n  presence(channel) {\n    const msg = {\n      method: this._methodType.PRESENCE,\n      params: {\n        channel: channel\n      }\n    };\n    return this._methodCall(msg, function (result) {\n      return {\n        'presence': result.presence\n      };\n    });\n  }\n\n  presenceStats(channel) {\n    const msg = {\n      method: this._methodType.PRESENCE_STATS,\n      params: {\n        channel: channel\n      }\n    };\n    return this._methodCall(msg, function (result) {\n      return {\n        'num_users': result.num_users,\n        'num_clients': result.num_clients\n      };\n    });\n  }\n\n  _dataReceived(data) {\n    const replies = this._decoder.decodeReplies(data);\n    // we have to guarantee order of events in replies processing - i.e. start processing\n    // next reply only when we finished processing of current one. Without syncing things in\n    // this way we could get wrong publication events order as reply promises resolve\n    // on next loop tick so for loop continues before we finished emitting all reply events.\n    this._dispatchPromise = this._dispatchPromise.then(() => {\n      let finishDispatch;\n      this._dispatchPromise = new Promise(resolve => {\n        finishDispatch = resolve;\n      });\n      this._dispatchSynchronized(replies, finishDispatch);\n    });\n    this._restartPing();\n  }\n\n  _dispatchSynchronized(replies, finishDispatch) {\n    let p = Promise.resolve();\n    for (const i in replies) {\n      if (replies.hasOwnProperty(i)) {\n        p = p.then(() => {\n          return this._dispatchReply(replies[i]);\n        });\n      }\n    }\n    p = p.then(() => {\n      finishDispatch();\n    });\n  }\n\n  _dispatchReply(reply) {\n    var next;\n    const p = new Promise(resolve => {\n      next = resolve;\n    });\n\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      next();\n      return p;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply, next);\n    } else {\n      this._handlePush(reply.result, next);\n    }\n\n    return p;\n  };\n\n  _call(msg) {\n    return new Promise((resolve, reject) => {\n      const id = this._addMessage(msg);\n      this._registerCall(id, resolve, reject);\n    });\n  }\n\n  _connect() {\n    if (this.isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._status === 'connecting') {\n      return;\n    }\n\n    this._debug('start connecting');\n    this._setStatus('connecting');\n    this._clientID = null;\n    this._reconnect = true;\n    this._setupTransport();\n  };\n\n  _disconnect(reason, shouldReconnect) {\n\n    const reconnect = shouldReconnect || false;\n    if (reconnect === false) {\n      this._reconnect = false;\n    }\n\n    if (this._isDisconnected()) {\n      if (!reconnect) {\n        this._clearConnectedState(reconnect);\n      }\n      return;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    this._debug('disconnected:', reason, shouldReconnect);\n    this._setStatus('disconnected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (this._reconnecting === false) {\n      // fire unsubscribe events for server side subs.\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel)) {\n          this.emit('unsubscribe', { channel: channel });\n        }\n      }\n      this.emit('disconnect', {\n        reason: reason,\n        reconnect: reconnect\n      });\n    }\n\n    if (reconnect === false) {\n      this._subs = {};\n      this._serverSubs = {};\n    }\n\n    if (!this._transportClosed) {\n      this._transport.close();\n    }\n  };\n\n  _refreshFailed() {\n    this._numRefreshFailed = 0;\n    if (!this._isDisconnected()) {\n      this._disconnect('refresh failed', false);\n    }\n    if (this._config.onRefreshFailed !== null) {\n      this._config.onRefreshFailed();\n    }\n  };\n\n  _refresh() {\n    // ask application for new connection token.\n    this._debug('refresh token');\n\n    if (this._config.refreshAttempts === 0) {\n      this._debug('refresh attempts set to 0, do not send refresh request at all');\n      this._refreshFailed();\n      return;\n    }\n\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        // We don't perform any connection status related actions here as we are\n        // relying on server that must close connection eventually.\n        if (resp.error) {\n          this._debug('error refreshing connection token', resp.error);\n        } else {\n          this._debug('error refreshing connection token: wrong status code', resp.status);\n        }\n        this._numRefreshFailed++;\n        if (this._refreshTimeout !== null) {\n          clearTimeout(this._refreshTimeout);\n          this._refreshTimeout = null;\n        }\n        if (this._config.refreshAttempts !== null && this._numRefreshFailed >= this._config.refreshAttempts) {\n          this._refreshFailed();\n          return;\n        }\n        const jitter = Math.round(Math.random() * 1000 * Math.max(this._numRefreshFailed, 20));\n        const interval = this._config.refreshInterval + jitter;\n        this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n        return;\n      }\n      this._numRefreshFailed = 0;\n      this._token = resp.data.token;\n      if (!this._token) {\n        this._refreshFailed();\n        return;\n      }\n      if (this._isDisconnected() && this._reconnect) {\n        this._debug('token refreshed, connect from scratch');\n        this._connect();\n      } else {\n        this._debug('send refreshed token');\n        const msg = {\n          method: this._methodType.REFRESH,\n          params: {\n            token: this._token\n          }\n        };\n        this._call(msg).then(resolveCtx => {\n          this._refreshResponse(this._decoder.decodeCommandResult(this._methodType.REFRESH, resolveCtx.result));\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, rejectCtx => {\n          this._refreshError(rejectCtx.error);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      }\n    };\n\n    if (this._config.onRefresh !== null) {\n      const context = {};\n      this._config.onRefresh(context, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.refreshEndpoint,\n        this._config.refreshParams,\n        this._config.refreshHeaders,\n        this._config.refreshData,\n        cb\n      );\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _refreshError(err) {\n    this._debug('refresh error', err);\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    const interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n    this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n  }\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (result.expires) {\n      this._clientID = result.client;\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n  };\n\n  _newXHRID() {\n    this._xhrID++;\n    return this._xhrID;\n  }\n\n  _subRefresh(channel) {\n    this._debug('refresh subscription token for channel', channel);\n\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      this._clearSubRefreshTimeout(channel);\n    } else {\n      return;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (resp.error || resp.status !== 200 || this._clientID !== clientID) {\n        return;\n      }\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      const token = channelsData[channel];\n      if (!token) {\n        return;\n      }\n      const msg = {\n        method: this._methodType.SUB_REFRESH,\n        params: {\n          channel: channel,\n          token: token\n        }\n      };\n\n      const sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subRefreshResponse(\n          channel,\n          this._decoder.decodeCommandResult(this._methodType.SUB_REFRESH, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subRefreshError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    const data = {\n      client: this._clientID,\n      channels: [channel]\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _clearSubRefreshTimeout(channel) {\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      clearTimeout(this._subRefreshTimeouts[channel]);\n      delete this._subRefreshTimeouts[channel];\n    }\n  }\n\n  _subRefreshError(channel, err) {\n    this._debug('subscription refresh error', channel, err);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    const jitter = Math.round(Math.random() * 1000);\n    let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._config.subRefreshInterval + jitter);\n    this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    return;\n  }\n\n  _subRefreshResponse(channel, result) {\n    this._debug('subscription refresh success', channel);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n    return;\n  };\n\n  _subscribe(sub, isResubscribe) {\n    this._debug('subscribing on', sub.channel);\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n      // subscribe will be called later\n      sub._setNew();\n      return;\n    }\n\n    sub._setSubscribing(isResubscribe);\n\n    const msg = {\n      method: this._methodType.SUBSCRIBE,\n      params: {\n        channel: channel\n      }\n    };\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n      // private channel.\n      if (this._isSubscribeBatching) {\n        this._privateChannels[channel] = true;\n      } else {\n        this.startSubscribeBatching();\n        this._subscribe(sub);\n        this.stopSubscribeBatching();\n      }\n    } else {\n      const recover = sub._needRecover();\n\n      if (recover === true) {\n        msg.params.recover = true;\n        const seq = this._getLastSeq(channel);\n        const gen = this._getLastGen(channel);\n        if (seq || gen) {\n          if (seq) {\n            msg.params.seq = seq;\n          }\n          if (gen) {\n            msg.params.gen = gen;\n          }\n        } else {\n          const offset = this._getLastOffset(channel);\n          if (offset) {\n            msg.params.offset = offset;\n          }\n        }\n        const epoch = this._getLastEpoch(channel);\n        if (epoch) {\n          msg.params.epoch = epoch;\n        }\n      }\n\n      this._call(msg).then(resolveCtx => {\n        this._subscribeResponse(\n          channel,\n          recover,\n          this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subscribeError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }\n  };\n\n  _unsubscribe(sub) {\n    delete this._subs[sub.channel];\n    delete this._lastOffset[sub.channel];\n    delete this._lastSeq[sub.channel];\n    delete this._lastGen[sub.channel];\n    if (this.isConnected()) {\n      // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n      this._addMessage({\n        method: this._methodType.UNSUBSCRIBE,\n        params: {\n          channel: sub.channel\n        }\n      });\n    }\n  };\n\n  _getTTLMilliseconds(ttl) {\n    // https://stackoverflow.com/questions/12633405/what-is-the-maximum-delay-for-setinterval\n    return Math.min(ttl * 1000, 2147483647);\n  }\n\n  getSub(channel) {\n    return this._getSub(channel);\n  }\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _isServerSub(channel) {\n    return this._serverSubs[channel] !== undefined;\n  };\n\n  _connectResponse(result, isRecover) {\n    const wasReconnecting = this._reconnecting;\n    this._reconnecting = false;\n    this._resetRetry();\n    this._refreshRequired = false;\n\n    if (this.isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    this._clientID = result.client;\n    this._setStatus('connected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n\n    this.startBatching();\n    this.startSubscribeBatching();\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n        if (sub._shouldResubscribe()) {\n          this._subscribe(sub, wasReconnecting);\n        }\n      }\n    }\n    this.stopSubscribeBatching();\n    this.stopBatching();\n\n    this._startPing();\n\n    const ctx = {\n      client: result.client,\n      transport: this._transportName,\n      latency: this._latency\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connect', ctx);\n\n    if (result.subs) {\n      this._processServerSubs(result.subs);\n    }\n  };\n\n  _processServerSubs(subs) {\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        const isResubscribe = this._serverSubs[channel] !== undefined;\n        let subCtx = { channel: channel, isResubscribe: isResubscribe };\n        subCtx = this._expandSubscribeContext(subCtx, sub);\n        this.emit('subscribe', subCtx);\n      }\n    }\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        if (sub.recovered) {\n          let pubs = sub.publications;\n          if (pubs && pubs.length > 0) {\n\n            // handle legacy order.\n            // TODO: remove as soon as Centrifuge v1 released.\n            if (pubs.length > 1 && (!pubs[0].offset || pubs[0].offset > pubs[1].offset)) {\n              pubs = pubs.reverse();\n            }\n\n            for (let i in pubs) {\n              if (pubs.hasOwnProperty(i)) {\n                this._handlePublication(channel, pubs[i]);\n              }\n            }\n          }\n        }\n        this._serverSubs[channel] = {\n          'seq': sub.seq,\n          'gen': sub.gen,\n          'offset': sub.offset,\n          'epoch': sub.epoch,\n          'recoverable': sub.recoverable\n        };\n      }\n    }\n  };\n\n  _stopPing() {\n    if (this._pongTimeout !== null) {\n      clearTimeout(this._pongTimeout);\n      this._pongTimeout = null;\n    }\n    if (this._pingTimeout !== null) {\n      clearTimeout(this._pingTimeout);\n      this._pingTimeout = null;\n    }\n  };\n\n  _startPing() {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n      return;\n    }\n    if (!this.isConnected()) {\n      return;\n    }\n\n    this._pingTimeout = setTimeout(() => {\n      if (!this.isConnected()) {\n        this._stopPing();\n        return;\n      }\n      this.ping();\n      this._pongTimeout = setTimeout(() => {\n        this._disconnect('no ping', true);\n      }, this._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n  };\n\n  _restartPing() {\n    this._stopPing();\n    this._startPing();\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === 0 && error.message === _errorTimeout) { // client side timeout.\n      this._disconnect('timeout', true);\n      return;\n    }\n    sub._setSubscribeError(error);\n  };\n\n  _expandSubscribeContext(ctx, result) {\n    let recovered = false;\n    if ('recovered' in result) {\n      recovered = result.recovered;\n    }\n    ctx.recovered = recovered;\n\n    let positioned = false;\n    if ('positioned' in result) {\n      positioned = result.positioned;\n    }\n    let epoch = '';\n    if ('epoch' in result) {\n      epoch = result.epoch;\n    }\n    let offset = 0;\n    if ('offset' in result) {\n      offset = result.offset;\n    }\n    if (positioned) {\n      ctx.streamPosition = {\n        'offset': offset,\n        'epoch': epoch\n      };\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n    return ctx;\n  }\n\n  _subscribeResponse(channel, isRecover, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    sub._setSubscribeSuccess(result);\n\n    let pubs = result.publications;\n    if (pubs && pubs.length > 0) {\n      if (pubs.length >= 2 && !pubs[0].offset && !pubs[1].offset) {\n        // handle legacy order.\n        pubs = pubs.reverse();\n      }\n      for (let i in pubs) {\n        if (pubs.hasOwnProperty(i)) {\n          this._handlePublication(channel, pubs[i]);\n        }\n      }\n    }\n\n    if (result.recoverable && (!isRecover || !result.recovered)) {\n      this._lastSeq[channel] = result.seq || 0;\n      this._lastGen[channel] = result.gen || 0;\n      this._lastOffset[channel] = result.offset || 0;\n    }\n\n    this._lastEpoch[channel] = result.epoch || '';\n\n    if (result.recoverable) {\n      sub._recoverable = true;\n    }\n\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n  };\n\n  _handleReply(reply, next) {\n    const id = reply.id;\n    const result = reply.result;\n\n    if (!(id in this._callbacks)) {\n      next();\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    clearTimeout(this._callbacks[id].timeout);\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback({ result, next });\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        next();\n        return;\n      }\n      const error = reply.error;\n      errback({ error, next });\n    }\n  }\n\n  _handleJoin(channel, join) {\n    const ctx = { 'info': join.info };\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('join', ctx);\n      }\n      return;\n    }\n    sub.emit('join', ctx);\n  };\n\n  _handleLeave(channel, leave) {\n    const ctx = { 'info': leave.info };\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('leave', ctx);\n      }\n      return;\n    }\n    sub.emit('leave', ctx);\n  };\n\n  _handleUnsub(channel, unsub) {\n    const ctx = {};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        delete this._serverSubs[channel];\n        ctx.channel = channel;\n        this.emit('unsubscribe', ctx);\n      }\n      return;\n    }\n    sub.unsubscribe();\n    if (unsub.resubscribe === true) {\n      sub.subscribe();\n    }\n  };\n\n  _handleSub(channel, sub) {\n    this._serverSubs[channel] = {\n      'seq': sub.seq,\n      'gen': sub.gen,\n      'offset': sub.offset,\n      'epoch': sub.epoch,\n      'recoverable': sub.recoverable\n    };\n    let ctx = { 'channel': channel, isResubscribe: false };\n    ctx = this._expandSubscribeContext(ctx, sub);\n    this.emit('subscribe', ctx);\n  };\n\n  _handlePublication(channel, pub) {\n    const sub = this._getSub(channel);\n    const ctx = {\n      'data': pub.data,\n      'seq': pub.seq,\n      'gen': pub.gen,\n      'offset': pub.offset\n    };\n    if (pub.info) {\n      ctx.info = pub.info;\n    }\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        if (pub.seq !== undefined) {\n          this._serverSubs[channel].seq = pub.seq;\n        }\n        if (pub.gen !== undefined) {\n          this._serverSubs[channel].gen = pub.gen;\n        }\n        if (pub.offset !== undefined) {\n          this._serverSubs[channel].offset = pub.offset;\n        }\n        ctx.channel = channel;\n        this.emit('publish', ctx);\n      }\n      return;\n    }\n    if (pub.seq !== undefined) {\n      this._lastSeq[channel] = pub.seq;\n    }\n    if (pub.gen !== undefined) {\n      this._lastGen[channel] = pub.gen;\n    }\n    if (pub.offset !== undefined) {\n      this._lastOffset[channel] = pub.offset;\n    }\n    sub.emit('publish', ctx);\n  };\n\n  _handleMessage(message) {\n    this.emit('message', message.data);\n  };\n\n  _handlePush(data, next) {\n    const push = this._decoder.decodePush(data);\n    let type = 0;\n    if ('type' in push) {\n      type = push['type'];\n    }\n    const channel = push.channel;\n\n    if (type === this._pushType.PUBLICATION) {\n      const pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n      this._handlePublication(channel, pub);\n    } else if (type === this._pushType.MESSAGE) {\n      const message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n      this._handleMessage(message);\n    } else if (type === this._pushType.JOIN) {\n      const join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n      this._handleJoin(channel, join);\n    } else if (type === this._pushType.LEAVE) {\n      const leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n      this._handleLeave(channel, leave);\n    } else if (type === this._pushType.UNSUB) {\n      const unsub = this._decoder.decodePushData(this._pushType.UNSUB, push.data);\n      this._handleUnsub(channel, unsub);\n    } else if (type === this._pushType.SUB) {\n      const sub = this._decoder.decodePushData(this._pushType.SUB, push.data);\n      this._handleSub(channel, sub);\n    }\n    next();\n  }\n\n  _flush() {\n    const messages = this._messages.slice(0);\n    this._messages = [];\n    this._transportSend(messages);\n  };\n\n  _ping() {\n    const msg = {\n      method: this._methodType.PING\n    };\n    this._call(msg).then(resolveCtx => {\n      this._pingResponse(this._decoder.decodeCommandResult(this._methodType.PING, resolveCtx.result));\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      this._debug('ping error', rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n  };\n\n  _pingResponse(result) {\n    if (!this.isConnected()) {\n      return;\n    }\n    this._stopPing();\n    this._startPing();\n  }\n\n  _getLastSeq(channel) {\n    const lastSeq = this._lastSeq[channel];\n    if (lastSeq) {\n      return lastSeq;\n    }\n    return 0;\n  };\n\n  _getLastOffset(channel) {\n    const lastOffset = this._lastOffset[channel];\n    if (lastOffset) {\n      return lastOffset;\n    }\n    return 0;\n  };\n\n  _getLastGen(channel) {\n    const lastGen = this._lastGen[channel];\n    if (lastGen) {\n      return lastGen;\n    }\n    return 0;\n  };\n\n  _getLastEpoch(channel) {\n    const lastEpoch = this._lastEpoch[channel];\n    if (lastEpoch) {\n      return lastEpoch;\n    }\n    return '';\n  };\n\n  _createErrorObject(message, code) {\n    const errObject = {\n      message: message,\n      code: code || 0\n    };\n\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback,\n      timeout: null\n    };\n    this._callbacks[id].timeout = setTimeout(() => {\n      delete this._callbacks[id];\n      if (isFunction(errback)) {\n        errback({ error: this._createErrorObject(_errorTimeout) });\n      }\n    }, this._config.timeout);\n  };\n\n  _addMessage(message) {\n    let id = this._nextMessageId();\n    message.id = id;\n    if (this._isBatching === true) {\n      this._messages.push(message);\n    } else {\n      this._transportSend([message]);\n    }\n    return id;\n  };\n\n  isConnected() {\n    return this._isConnected();\n  }\n\n  connect() {\n    this._connect();\n  };\n\n  disconnect() {\n    this._disconnect('client', false);\n  };\n\n  ping() {\n    return this._ping();\n  }\n\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n  };\n\n  stopBatching() {\n    this._isBatching = false;\n    this._flush();\n  };\n\n  startSubscribeBatching() {\n    // start collecting private channels to create bulk authentication\n    // request to subscribeEndpoint when stopSubscribeBatching will be called\n    this._isSubscribeBatching = true;\n  };\n\n  stopSubscribeBatching() {\n    // create request to subscribeEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isSubscribeBatching = false;\n    const authChannels = this._privateChannels;\n    this._privateChannels = {};\n\n    const channels = [];\n\n    for (const channel in authChannels) {\n      if (authChannels.hasOwnProperty(channel)) {\n        const sub = this._getSub(channel);\n        if (!sub) {\n          continue;\n        }\n        channels.push(channel);\n      }\n    }\n\n    if (channels.length === 0) {\n      this._debug('no private channels found, no need to make request');\n      return;\n    }\n\n    const data = {\n      client: this._clientID,\n      channels: channels\n    };\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        this._debug('authorization request failed');\n        for (const i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            const channel = channels[i];\n            this._subscribeError(channel, this._createErrorObject('authorization request failed'));\n          }\n        }\n        return;\n      }\n\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      // try to send all subscriptions in one request.\n      let batch = false;\n\n      if (!this._isBatching) {\n        this.startBatching();\n        batch = true;\n      }\n\n      for (const i in channels) {\n        if (channels.hasOwnProperty(i)) {\n          const channel = channels[i];\n          const token = channelsData[channel];\n\n          if (!token) {\n            // subscription:error\n            this._subscribeError(channel, this._createErrorObject('permission denied', 103));\n            continue;\n          } else {\n            const msg = {\n              method: this._methodType.SUBSCRIBE,\n              params: {\n                channel: channel,\n                token: token\n              }\n            };\n\n            const sub = this._getSub(channel);\n            if (sub === null) {\n              continue;\n            }\n\n            const recover = sub._needRecover();\n\n            if (recover === true) {\n              msg.params.recover = true;\n              const seq = this._getLastSeq(channel);\n              const gen = this._getLastGen(channel);\n              if (seq || gen) {\n                if (seq) {\n                  msg.params.seq = seq;\n                }\n                if (gen) {\n                  msg.params.gen = gen;\n                }\n              } else {\n                const offset = this._getLastOffset(channel);\n                if (offset) {\n                  msg.params.offset = offset;\n                }\n              }\n              const epoch = this._getLastEpoch(channel);\n              if (epoch) {\n                msg.params.epoch = epoch;\n              }\n            }\n            this._call(msg).then(resolveCtx => {\n              this._subscribeResponse(\n                channel,\n                recover,\n                this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.result)\n              );\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            }, rejectCtx => {\n              this._subscribeError(channel, rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            });\n          }\n        }\n      }\n\n      if (batch) {\n        this.stopBatching();\n      }\n\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _setSubscribeSince(sub, since) {\n    this._lastOffset[sub.channel] = since.offset;\n    this._lastEpoch[sub.channel] = since.epoch;\n    sub._setNeedRecover(true);\n  }\n\n  subscribe(channel, events, opts) {\n    const currentSub = this._getSub(channel);\n    if (currentSub !== null) {\n      currentSub._setEvents(events);\n      if (currentSub._isUnsubscribed()) {\n        currentSub.subscribe();\n      }\n      return currentSub;\n    }\n    const sub = new Subscription(this, channel, events);\n    this._subs[channel] = sub;\n    if (opts && opts.since) {\n      this._setSubscribeSince(sub, opts.since);\n    }\n    sub.subscribe();\n    return sub;\n  };\n}\n","import {Centrifuge} from './centrifuge.js';\nexport default Centrifuge;\n","export const JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nexport const JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUBSCRIBE: 3,\n  MESSAGE: 4,\n  SUBSCRIBE: 5\n};\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    return commands.map(c => JSON.stringify(c)).join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    return data.split('\\n').filter(r => r !== '').map(r => JSON.parse(r));\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodePush(data) {\n    return data;\n  }\n\n  decodePushData(pushType, data) {\n    return data;\n  }\n}\n\n","import EventEmitter from 'events';\n\nimport {\n  isFunction\n} from './utils';\n\nconst _STATE_NEW = 0;\nconst _STATE_SUBSCRIBING = 1;\nconst _STATE_SUCCESS = 2;\nconst _STATE_ERROR = 3;\nconst _STATE_UNSUBSCRIBED = 4;\n\nexport default class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, events) {\n    super();\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._ready = false;\n    this._subscriptionPromise = null;\n    this._noResubscribe = false;\n    this._recoverable = false;\n    this._recover = false;\n    this._setEvents(events);\n    this._initializePromise();\n    this._promises = {};\n    this._promiseId = 0;\n    this.on('error', function (errContext) {\n      this._centrifuge._debug('subscription error', errContext);\n    });\n  }\n\n  _nextPromiseId() {\n    return ++this._promiseId;\n  }\n\n  _initializePromise() {\n    // this helps us to wait until subscription will successfully\n    // subscribe and call actions such as presence, history etc in\n    // synchronous way.\n    this._ready = false;\n\n    this._subscriptionPromise = new Promise((resolve, reject) => {\n      this._resolve = value => {\n        this._ready = true;\n        resolve(value);\n      };\n      this._reject = err => {\n        this._ready = true;\n        reject(err);\n      };\n    }).then(function () {}, function () {});\n  };\n\n  _setNeedRecover(enabled) {\n    this._recoverable = enabled;\n    this._recover = enabled;\n  }\n\n  _needRecover() {\n    return this._recoverable === true && this._recover === true;\n  };\n\n  _setEvents(events) {\n    if (!events) {\n      return;\n    }\n    if (isFunction(events)) {\n      // events is just a function to handle publication received from channel.\n      this.on('publish', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n      const knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n      for (let i = 0, l = knownEvents.length; i < l; i++) {\n        const ev = knownEvents[i];\n        if (ev in events) {\n          this.on(ev, events[ev]);\n        }\n      }\n    }\n  };\n\n  _isNew() {\n    return this._status === _STATE_NEW;\n  };\n\n  _isUnsubscribed() {\n    return this._status === _STATE_UNSUBSCRIBED;\n  };\n\n  _isSubscribing() {\n    return this._status === _STATE_SUBSCRIBING;\n  };\n\n  _isReady() {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n  };\n\n  _isSuccess() {\n    return this._status === _STATE_SUCCESS;\n  };\n\n  _isError() {\n    return this._status === _STATE_ERROR;\n  };\n\n  _setNew() {\n    this._status = _STATE_NEW;\n  };\n\n  _setSubscribing(isResubscribe) {\n    this._isResubscribe = isResubscribe || false;\n    if (this._ready === true) {\n      // new promise for this subscription\n      this._initializePromise();\n    }\n    this._status = _STATE_SUBSCRIBING;\n  };\n\n  _setSubscribeSuccess(subscribeResult) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._status = _STATE_SUCCESS;\n    const successContext = this._getSubscribeSuccessContext(subscribeResult);\n    this._recover = false;\n    this.emit('subscribe', successContext);\n    this._resolve(successContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].resolve();\n      delete this._promises[id];\n    }\n  };\n\n  _setSubscribeError(err) {\n    if (this._status === _STATE_ERROR) {\n      return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    const errContext = this._getSubscribeErrorContext();\n    this.emit('error', errContext);\n    this._reject(errContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].reject(err);\n      delete this._promises[id];\n    }\n  };\n\n  _triggerUnsubscribe() {\n    this.emit('unsubscribe', {\n      channel: this.channel\n    });\n  };\n\n  _setUnsubscribed(noResubscribe) {\n    this._centrifuge._clearSubRefreshTimeout(this.channel);\n    if (this._status === _STATE_UNSUBSCRIBED) {\n      return;\n    }\n    const needTrigger = this._status === _STATE_SUCCESS;\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n      this._recover = false;\n      this._noResubscribe = true;\n      delete this._centrifuge._lastSeq[this.channel];\n      delete this._centrifuge._lastGen[this.channel];\n      delete this._centrifuge._lastEpoch[this.channel];\n    }\n    if (needTrigger) {\n      this._triggerUnsubscribe();\n    }\n  };\n\n  _shouldResubscribe() {\n    return !this._noResubscribe;\n  };\n\n  _getSubscribeSuccessContext(subscribeResult) {\n    let ctx = {\n      channel: this.channel,\n      isResubscribe: this._isResubscribe\n    };\n    if (subscribeResult) {\n      // subscribeResult not available when called from Subscription.ready method at the moment.\n      ctx = this._centrifuge._expandSubscribeContext(ctx, subscribeResult);\n    }\n    return ctx;\n  };\n\n  _getSubscribeErrorContext() {\n    const subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n  };\n\n  ready(callback, errback) {\n    if (this._ready) {\n      if (this._isSuccess()) {\n        callback(this._getSubscribeSuccessContext());\n      } else {\n        errback(this._getSubscribeErrorContext());\n      }\n    }\n  };\n\n  subscribe(opts) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._noResubscribe = false;\n    if (opts && opts.since) {\n      this._centrifuge._setSubscribeSince(this, opts.since);\n    }\n    this._centrifuge._subscribe(this);\n  };\n\n  unsubscribe() {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n  };\n\n  _methodCall() {\n    if (this._isSuccess()) {\n      return Promise.resolve();\n    } else if (this._isError()) {\n      return Promise.reject(this._error);\n    }\n    let subPromise = new Promise((res, rej) => {\n      const timeout = setTimeout(function () {\n        rej({'code': 0, 'message': 'timeout'});\n      }, this._centrifuge._config.timeout);\n      this._promises[this._nextPromiseId()] = {\n        timeout: timeout,\n        resolve: res,\n        reject: rej\n      };\n    });\n    return subPromise;\n  }\n\n  publish(data) {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.publish(self.channel, data);\n    });\n  };\n\n  presence() {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.presence(self.channel);\n    });\n  };\n\n  presenceStats() {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.presenceStats(self.channel);\n    });\n  };\n\n  history(options) {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.history(self.channel, options);\n    });\n  };\n}\n","export function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport function log(level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nexport function backoff(step, min, max) {\n  const jitter = 0.5 * Math.random();\n  const interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nexport function errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n\nexport function extend(a, b) {\n  for (const key in b) {\n    if (b.hasOwnProperty(key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(579);\n"],"sourceRoot":""}